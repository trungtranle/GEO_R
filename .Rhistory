barplot(ex[as.character(tT[i,1]),], col = tr, las = 2)
title(paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9]))
legend("bottomright", labels , fill=palette(), bty="n", inset=c(-0.27,0))
}
library(Biobase)
library(GEOquery)
library(limma)
library(affy)
library(lattice)
gset <- getGEO('GSE28440', AnnotGPL = TRUE, GSEMatrix = TRUE)
gset <- gset[[1]]
class(gset)
fvarLabels(gset) <- make.names(fvarLabels(gset))
fvarLabels(gset)
print(pData(gset))
print(colnames(pData(gset)))
pData(gset[, c(1:3,13:15)])
gset_BAT <- gset[, c(1:3, 13:15)]
pData(gset_BAT)
# tr <- pData(gset_BAT)[,1]
# tr <- as.vector(tr)
# tr <- as.factor(tr)
tr <- as.factor(c("HF","HF","HF","ND", "ND", "ND"))
tr
hist(exprs(gset_BAT))
gset_BAT$description <- tr
design <- model.matrix(~ description + 0, gset_BAT) #create sample matrix
colnames(design)
colnames(design) <- levels(tr) #set sample matrix as levels of treatments
fit <- lmFit(gset_BAT, design)
fit
cont.matrix <- makeContrasts(ND - HF, levels=design)
cont.matrix
fit2 <- contrasts.fit(fit, cont.matrix)
fit2 <- eBayes(fit2, 0.01)
tT <- topTable(fit2, adjust="fdr", sort.by="B", number=250)
tT
#Update with latest NCBI Annotation
gpl <- annotation(gset)
platf <- getGEO(gpl, AnnotGPL=TRUE)
ncbifd <- data.frame(attr(dataTable(platf), "table"))
tT <- tT[setdiff(colnames(tT), setdiff(fvarLabels(gset), "ID"))]
tT <- merge(tT, ncbifd, by="ID")
tT <- tT[order(tT$P.Value), ]
colnames(tT)
tT
palette(c("#dfeaf4","#f4dfdf"))
ex = exprs(gset_BAT)[, order(tr)]
colnames(ex) <- pData(gset_BAT)[,2]
title <- paste ("GSE28440", '/', annotation(gset), " selected samples", sep ='')
require(reshape2)
df_test <- melt(ex, id.var = colnames(ex))
head(df_test)
bwplot(Var2 ~ value, df_test, groups = tr, fill = tr, main = title,
auto.key=TRUE)
for (i in 1:10) {
par(mar=c(6,2,2,6), xpd=TRUE)
barplot(ex[as.character(tT[i,1]),], col = tr, las = 2)
title(paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9]))
legend("bottomright", labels , fill=palette(), bty="n", inset=c(-0.27,0))
}
tT
match('Foxo1', tT[10])
tT[10]
tT[,10]
print(colnames(tT)
#Update with latest NCBI Annotation
gpl <- annotation(gset)
#Update with latest NCBI Annotation
gpl <- annotation(gset)
platf <- getGEO(gpl, AnnotGPL=TRUE)
ncbifd <- data.frame(attr(dataTable(platf), "table"))
tT <- tT[setdiff(colnames(tT), setdiff(fvarLabels(gset), "ID"))]
tT <- merge(tT, ncbifd, by="ID")
tT <- tT[order(tT$P.Value), ]
print(colnames(tT))
tT
tT[1,9]
tT[,9]
match('Foxo1', tT[9])
match('56458', tT[10])
for (i in 1:10) {
par(mar=c(6,2,2,6), xpd=TRUE)
barplot(ex[as.character(tT[i,1]),], col = tr, las = 2)
title(paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9]))
}
match('Foxo1', tT[9])
match('56458', tT[10])
match('Foxo1', tT[9])
match(56458, tT[10])
library(Biobase)
library(GEOquery)
library(limma)
library(affy)
library(lattice)
gset <- getGEO('GSE28440', AnnotGPL = TRUE, GSEMatrix = TRUE)
gset <- gset[[1]]
class(gset)
fvarLabels(gset) <- make.names(fvarLabels(gset))
fvarLabels(gset)
print(pData(gset))
print(colnames(pData(gset)))
pData(gset[, c(1:3,13:15)])
gset_BAT <- gset[, c(1:3, 13:15)]
pData(gset_BAT)
# tr <- pData(gset_BAT)[,1]
# tr <- as.vector(tr)
# tr <- as.factor(tr)
tr <- as.factor(c("HF","HF","HF","ND", "ND", "ND"))
tr
hist(exprs(gset_BAT))
gset_BAT$description <- tr
design <- model.matrix(~ description + 0, gset_BAT) #create sample matrix
colnames(design)
colnames(design) <- levels(tr) #set sample matrix as levels of treatments
fit <- lmFit(gset_BAT, design)
fit
cont.matrix <- makeContrasts(ND - HF, levels=design)
cont.matrix
fit2 <- contrasts.fit(fit, cont.matrix)
fit2 <- eBayes(fit2, 0.01)
tT <- topTable(fit2, adjust="fdr", sort.by="B", number=500)
tT
#Update with latest NCBI Annotation
gpl <- annotation(gset)
platf <- getGEO(gpl, AnnotGPL=TRUE)
ncbifd <- data.frame(attr(dataTable(platf), "table"))
tT <- tT[setdiff(colnames(tT), setdiff(fvarLabels(gset), "ID"))]
tT <- merge(tT, ncbifd, by="ID")
tT <- tT[order(tT$P.Value), ]
print(colnames(tT))
tT
palette(c("#dfeaf4","#f4dfdf"))
ex = exprs(gset_BAT)[, order(tr)]
colnames(ex) <- pData(gset_BAT)[,2]
title <- paste ("GSE28440", '/', annotation(gset), " selected samples", sep ='')
require(reshape2)
df_test <- melt(ex, id.var = colnames(ex))
head(df_test)
bwplot(Var2 ~ value, df_test, groups = tr, fill = tr, main = title,
auto.key=TRUE)
for (i in 1:10) {
par(mar=c(6,2,2,6), xpd=TRUE)
barplot(ex[as.character(tT[i,1]),], col = tr, las = 2)
title(paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9]))
}
match('Foxo1', tT[9])
match(56458, tT[10])
for (i in 1:10) {
title <- paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9])
#par(mar=c(6,2,2,6), xpd=TRUE)
barchart(ex[as.character(tT[i,1]),] ~ tr, main = title)
}
for (i in 1:10) {
title <- paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9])
#par(mar=c(6,2,2,6), xpd=TRUE)
barchart(ex[as.character(tT[i,1]),] ~ tr, main = title)
}
for (i in 1:10) {
title <- paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9])
#par(mar=c(6,2,2,6), xpd=TRUE)
barchart(ex[as.character(tT[i,1]),] ~ tr, main = title)
}
for (i in 1:10) {
title <- paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9])
#par(mar=c(6,2,2,6), xpd=TRUE)
barchart(ex[as.character(tT[i,1]),] ~ tr, main = title)
}
match('56458', tT[10])
barchart(ex[as.character(tT[1,1]),] ~ tr, main = title)
for (i in 1:10) {
title <- paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9])
#par(mar=c(6,2,2,6), xpd=TRUE)
barchart(ex[as.character(tT[i,1]),], main = title)
}
barchart(ex[as.character(tT[1,1]),], main = title)
barchart(ex[as.character(tT[1,1]),], main = title, col = tr)
for (i in 1:10) {
par(mar=c(6,2,2,6), xpd=TRUE)
barchart(ex[as.character(tT[i,1]),], col = tr)
title(paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9]))
}
for (i in 1:10) {
par(mar=c(6,2,2,6), xpd=TRUE)
barchart(ex[as.character(tT[i,1]),], col = tr)
title(paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9]))
}
plot.new()
for (i in 1:10) {
par(mar=c(6,2,2,6), xpd=TRUE)
barchart(ex[as.character(tT[i,1]),], col = tr)
title(paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9]))
plot.new()
}
for (i in 1:10) {
par(mar=c(6,2,2,6), xpd=TRUE)
barplot(ex[as.character(tT[i,1]),], col = tr, las = 2)
#title(paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9]))
}
for (i in 1:10) {
par(mar=c(6,2,2,6), xpd=TRUE)
barplot(ex[as.character(tT[i,1]),], col = tr, las = 2)
title(paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9]))
}
for (i in 1:10) {
par(mar=c(6,2,2,6), xpd=TRUE)
barchart(ex[as.character(tT[i,1]),], col = tr)
title(paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9]))
plot.new()
}
for (i in 1:10) {
plot.new()
par(mar=c(6,2,2,6), xpd=TRUE)
barchart(ex[as.character(tT[i,1]),], col = tr)
title(paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9]))
}
barchart(ex[as.character(tT[i,1]),], col = tr)
for (i in 1:10) {
plot.new()
#par(mar=c(6,2,2,6), xpd=TRUE)
barchart(ex[as.character(tT[i,1]),], col = tr)
title(paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9]))
}
for (i in 1:1) {
plot.new()
#par(mar=c(6,2,2,6), xpd=TRUE)
barchart(ex[as.character(tT[i,1]),], col = tr)
title(paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9]))
}
barchart(ex[as.character(tT[1,1]),], col = tr)
for (i in 1:1) {
plot.new()
#par(mar=c(6,2,2,6), xpd=TRUE)
barchart(ex[as.character(tT[i,1]),], col = tr)
#title(paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9]))
}
for (i in 1:1) {
#par(mar=c(6,2,2,6), xpd=TRUE)
barchart(ex[as.character(tT[i,1]),], col = tr)
#title(paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9]))
}
for (i in 1:2) {
#par(mar=c(6,2,2,6), xpd=TRUE)
barchart(ex[as.character(tT[i,1]),], col = tr)
#title(paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9]))
}
barchart(ex[as.character(tT[1,1]),], col = tr)
for (i in 1:10) {
par(mar=c(6,2,2,6), xpd=TRUE)
p <- barchart(ex[as.character(tT[i,1]),], col = tr)
title(paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9]))
print(p)
}
for (i in 1:10) {
plot.new()
par(mar=c(6,2,2,6), xpd=TRUE)
p <- barchart(ex[as.character(tT[i,1]),], col = tr)
title(paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9]))
print(p)
}
for (i in 1:10) {
plot.new()
par(mar=c(6,2,2,6), xpd=TRUE)
title <- paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9])
p <- barchart(ex[as.character(tT[i,1]),], col = tr, main = title)
print(p)
}
for (i in 1:10) {
#plot.new()
par(mar=c(6,2,2,6), xpd=TRUE)
title <- paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9])
p <- barchart(ex[as.character(tT[i,1]),], col = tr, main = title)
print(p)
}
for (i in 1:10) {
#par(mar=c(6,2,2,6), xpd=TRUE)
title <- paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9])
p <- barchart(ex[as.character(tT[i,1]),], col = tr, main = title)
print(p)
}
for (i in 1:10) {
title <- paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9])
p <- barchart(ex[as.character(tT[i,1]),], col = tr, main = title, horiz = FALSE)
print(p)
}
ex[as.character(tT[1,1]),]
for (i in 1:10) {
title <- paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9])
p <- barchart(ex[as.character(tT[i,1]),], col = tr, main = title)
print(p)
}
#
# for (i in 1:10) {
#   par(mar=c(6,2,2,6), xpd=TRUE)
#   barplot(ex[as.character(tT[i,1]),], col = tr, las = 2)
#
#   title(paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9]))
#
#
#
# }
for (i in 1:10) {
title <- paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9])
p <- barchart(ex[as.character(tT[i,1]),], col = tr, main = title)
print(p)
}
library(Biobase)
library(GEOquery)
library(limma)
library(affy)
library(lattice)
gset <- getGEO('GSE28440', AnnotGPL = TRUE, GSEMatrix = TRUE)
gset <- gset[[1]]
class(gset)
fvarLabels(gset) <- make.names(fvarLabels(gset))
fvarLabels(gset)
print(pData(gset))
print(colnames(pData(gset)))
for (i in 1:10) {
title <- paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9])
p <- barchart(ex[as.character(tT[i,1]),], col = tr, main = title)
print(p)
}
match('Foxo1', tT[9])
match(56458, tT[10])
for (i in 1:10) {
title <- paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9])
p <- barchart(ex[as.character(tT[i,1]),], col = tr, main = title, xlab = 'Expression Value')
print(p)
}
library(Biobase)
library(GEOquery)
library(limma)
library(affy)
library(lattice)
gset <- getGEO('GSE28440', AnnotGPL = TRUE, GSEMatrix = TRUE)
gset <- gset[[1]]
class(gset)
fvarLabels(gset) <- make.names(fvarLabels(gset))
fvarLabels(gset)
print(pData(gset))
print(colnames(pData(gset)))
pData(gset[, c(1:3,13:15)])
gset_BAT <- gset[, c(1:3, 13:15)]
pData(gset_BAT)
# tr <- pData(gset_BAT)[,1]
# tr <- as.vector(tr)
# tr <- as.factor(tr)
tr <- as.factor(c("HF","HF","HF","ND", "ND", "ND"))
tr
hist(exprs(gset_BAT))
gset_BAT$description <- tr
design <- model.matrix(~ description + 0, gset_BAT) #create sample matrix
colnames(design)
colnames(design) <- levels(tr) #set sample matrix as levels of treatments
fit <- lmFit(gset_BAT, design)
fit
cont.matrix <- makeContrasts(ND - HF, levels=design)
cont.matrix
fit2 <- contrasts.fit(fit, cont.matrix)
fit2 <- eBayes(fit2, 0.01)
tT <- topTable(fit2, adjust="fdr", sort.by="B", number=500)
tT
#Update with latest NCBI Annotation
gpl <- annotation(gset)
platf <- getGEO(gpl, AnnotGPL=TRUE)
ncbifd <- data.frame(attr(dataTable(platf), "table"))
tT <- tT[setdiff(colnames(tT), setdiff(fvarLabels(gset), "ID"))]
tT <- merge(tT, ncbifd, by="ID")
tT <- tT[order(tT$P.Value), ]
print(colnames(tT))
tT
palette(c("#dfeaf4","#f4dfdf"))
ex = exprs(gset_BAT)[, order(tr)]
colnames(ex) <- pData(gset_BAT)[,2]
title <- paste ("GSE28440", '/', annotation(gset), " selected samples", sep ='')
require(reshape2)
df_test <- melt(ex, id.var = colnames(ex))
head(df_test)
bwplot(Var2 ~ value, df_test, groups = tr, fill = tr, main = title,
auto.key=TRUE)
#
# for (i in 1:10) {
#   par(mar=c(6,2,2,6), xpd=TRUE)
#   barplot(ex[as.character(tT[i,1]),], col = tr, las = 2)
#
#   title(paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9]))
#
#
#
# }
for (i in 1:10) {
title <- paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9])
p <- barchart(ex[as.character(tT[i,1]),], col = tr, main = title)
print(p)
}
match('Foxo1', tT[9])
match(56458, tT[10])
for (i in 1:10) {
title <- paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9])
p <- barchart(ex[as.character(tT[i,1]),], col = tr, main = title,
xlab = 'Expression value', auto.key = TRUE)
print(p)
}
library(Biobase)
library(GEOquery)
library(limma)
library(affy)
library(lattice)
gset <- getGEO('GSE28440', AnnotGPL = TRUE, GSEMatrix = TRUE)
gset <- gset[[1]]
class(gset)
fvarLabels(gset) <- make.names(fvarLabels(gset))
fvarLabels(gset)
print(pData(gset))
print(colnames(pData(gset)))
pData(gset[, c(1:3,13:15)])
gset_BAT <- gset[, c(1:3, 13:15)]
pData(gset_BAT)
# tr <- pData(gset_BAT)[,1]
# tr <- as.vector(tr)
# tr <- as.factor(tr)
tr <- as.factor(c("HF","HF","HF","ND", "ND", "ND"))
tr
hist(exprs(gset_BAT))
gset_BAT$description <- tr
design <- model.matrix(~ description + 0, gset_BAT) #create sample matrix
colnames(design)
colnames(design) <- levels(tr) #set sample matrix as levels of treatments
fit <- lmFit(gset_BAT, design)
fit
cont.matrix <- makeContrasts(ND - HF, levels=design)
cont.matrix
fit2 <- contrasts.fit(fit, cont.matrix)
fit2 <- eBayes(fit2, 0.01)
tT <- topTable(fit2, adjust="fdr", sort.by="B", number=500)
tT
#Update with latest NCBI Annotation
gpl <- annotation(gset)
platf <- getGEO(gpl, AnnotGPL=TRUE)
ncbifd <- data.frame(attr(dataTable(platf), "table"))
tT <- tT[setdiff(colnames(tT), setdiff(fvarLabels(gset), "ID"))]
tT <- merge(tT, ncbifd, by="ID")
tT <- tT[order(tT$P.Value), ]
print(colnames(tT))
tT
palette(c("#dfeaf4","#f4dfdf"))
ex = exprs(gset_BAT)[, order(tr)]
colnames(ex) <- pData(gset_BAT)[,2]
title <- paste ("GSE28440", '/', annotation(gset), " selected samples", sep ='')
require(reshape2)
df_test <- melt(ex, id.var = colnames(ex))
head(df_test)
bwplot(Var2 ~ value, df_test, groups = tr, fill = tr, main = title,
auto.key=TRUE)
for (i in 1:10) {
title <- paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9])
p <- barchart(ex[as.character(tT[i,1]),], col = tr, main = title,
xlab = 'Expression value',
auto.key=list(space='top',cex.title=1))
print(p)
}
match('Foxo1', tT[9])
match(56458, tT[10])
p <- barchart(ex[as.character(tT[i,1]),], col = tr, main = title,
xlab = 'Expression value',
auto.key=TRUE)
for (i in 1:10) {
title <- paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9])
p <- barchart(ex[as.character(tT[i,1]),], col = tr, main = title,
xlab = 'Expression value',
auto.key=TRUE)
print(p)
}
for (i in 1:10) {
title <- paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9])
p <- barchart(ex[as.character(tT[i,1]),], col = tr, main = title, group = tr,
xlab = 'Expression value',
auto.key=TRUE)
print(p)
}
for (i in 1:10) {
title <- paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9])
p <- barchart(ex[as.character(tT[i,1]),], main = title, group = tr,
xlab = 'Expression value',
auto.key=TRUE)
print(p)
}
palette(c("#dfeaf4","#f4dfdf"))
for (i in 1:10) {
title <- paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9])
p <- barchart(ex[as.character(tT[i,1]),], main = title, group = tr,
xlab = 'Expression value',
auto.key=TRUE)
print(p)
}
palette(c("#dfeaf4","#f4dfdf"))
for (i in 1:10) {
title <- paste('Expression value',tT[i,1],"\n Gene symbol",tT[i,9])
p <- barchart(ex[as.character(tT[i,1]),], main = title, col = tr,
xlab = 'Expression value',
auto.key=TRUE)
print(p)
}
heatmap(ex)
p.adjust(fit$p.value[, 2]) <0.05
p.adjust(fit$p.value[, 2]) < 0.05
tT$P.Value
heatmap(tT)
fit2$p.value
p.adjust(fit2$p.value[, 2]) <0.05
fit2$p.value
